int findd(int a, vector<int> &parents){
    if(parents[a]!=a){
        parents[a]=findd(parents[a],parents);
    }
    return parents[a];
}

bool isConnected(int a, int b, vector<int> &fathers){
    return findd(a,fathers)==findd(b,fathers);
}

void unionn(int a, int b, vector<int> &fathers, vector<int> &sizee){
    if(isConnected(a,b,fathers))return;
    int parentA=findd(a,fathers);
    int parentB=findd(b,fathers);

    if(sizee[parentA]>sizee[parentB]){
        fathers[parentB]=parentA;
    }else if(sizee[parentA]<sizee[parentB]){
        fathers[parentA]=parentB;
    }else{
        sizee[parentA]++;
        fathers[parentB]=parentA;
    }
}

//Complejidad ---> Funcion Inversa Ackermann
